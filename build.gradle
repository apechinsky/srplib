
allprojects {
    group = 'org.srplib'
    version = '0.9.0'

    ext.isReleaseVersion = !version.endsWith("-SNAPSHOT")

    repositories {
        mavenCentral()
    }

    ext.libs = [:]

    libs.guava = 'com.google.guava:guava:14.0'

    libs.junit = 'junit:junit:4.11'

    libs.mockito = [
        "org.mockito:mockito-core:2.21.0",
        "org.mockito:mockito-junit-jupiter:2.23.0"
    ]

    libs.hamcrest_all = [
        libs.hamcrest_core = "org.hamcrest:hamcrest-core:2.2",
        libs.hamcrest_library = "org.hamcrest:hamcrest-library:2.2",
    ]


    libs.objenesis = 'org.objenesis:objenesis:2.6'

    libs.test = [
        libs.junit,
        libs.mockito,
        libs.hamcrest_core,
        libs.hamcrest_library
    ]
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    javadoc {
        if (JavaVersion.current().isJava8Compatible()) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
        if(JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                pom {
                   name = 'Single Responsibility Principle library'
                   description = 'Single Responsibility Principle (SRP) libraries collection'
                   url = 'https://github.com/apechinsky/srplib'

                   licenses {
                       license {
                           name = 'The Apache Software License, Version 2.0'
                           url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       }
                   }

                   scm {
                       url = 'scm:git:git@github.com:apechinsky/srplib.git'
                       connection = 'scm:git:git@github.com:apechinsky/srplib.git'
                       developerConnection = 'git@github.com:apechinsky/srplib.git'
                   }

                   developers {
                       developer {
                           id = 'apechinsky'
                           name = 'Anton Pechinsky'
                       }
                   }
                }
            }
        }
        repositories {
            def sonatypeCredentials = Credentials.fromProject(project)

            maven {
                def releasesRepoUrl =  "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl =  "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username = sonatypeCredentials.ossrhUsername
                    password = sonatypeCredentials.ossrhPassword
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}



class Credentials {

    String ossrhUsername

    String ossrhPassword

    static Credentials fromProject(Project project) {
        new Credentials(
            ossrhUsername: project.hasProperty('ossrhUsername') ? project.ossrhUsername : 'undefined',
            ossrhPassword: project.hasProperty('ossrhPassword') ? project.ossrhPassword : 'undefined'
        )
    }

}
