<document>
    <properties>
        <title>Single Responsiblity Principle Tools</title>
        <author email="anton@pechinsky.com">Anton Pechinsky</author>
    </properties>

    <body>

        <release version="0.3.4">
            <action dev="Anton Pechinsky" type="remove">
                Remove deprecated methods ReflectionUtils.getField(), ReflectionUtils.setField().
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add ReflectionInvoker - a replacement for ReflectionBeanBuilder with ability to invoke methods.
                ReflectionBeanBuilder made deprecated.
            </action>
            <action dev="Anton Pechinsky" type="change">
                ReflectionUtils method refactoring. Unified parameter order. Improve method naming consistency.
                Now findXXXX methods returns null, getXXXX methods throws exception if field/method not found.
            </action>
            <action dev="Anton Pechinsky" type="fix">
                ReflectionUtils.getTypeParameter fail with exception if no type parameter in type or nested type parameter.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add more tests for ReflectionUtils
            </action>
        </release>

        <release version="0.3.3" date="2012-10-19">
            <action dev="Anton Pechinsky" type="add">
                Add Converters.choice() method.
            </action>

            <action dev="Anton Pechinsky" type="add">
                Add Converters.chain() method.
            </action>

            <action dev="Anton Pechinsky" type="add">
                Add Converters.equal() method.
            </action>

            <action dev="Anton Pechinsky" type="add">
                Add EqualsConverter. Converts an object to boolean by comparing it to specified object.
            </action>

            <action dev="Anton Pechinsky" type="add">
                Add ObjectGraph. Encapsulates object graph navigation algorithm. Implements Visitor pattern.
            </action>

            <action dev="Anton Pechinsky" type="change">
                Methods getDeclaredFields.getDeclaredFields() now returns List of Fields instead of List of Strings
            </action>

            <action dev="Anton Pechinsky" type="change">
                Moved classes:
                org.srplib.support.ReflectionUtils        -> org.srplib.reflection.ReflectionUtils
                org.srplib.support.ReflectionBeanBuilder  -> org.srplib.reflection.ReflectionBeanBuilder
                org.srplib.support.ReflectionException    -> org.srplib.reflection.ReflectionException
                org.srplib.support.ProxyUtils             -> org.srplib.reflection.ProxyUtils
                org.srplib.support.EmptyInvocationHandler -> org.srplib.reflection.EmptyInvocationHandler
            </action>

        </release>

        <release version="0.3.2" date="2012-09-18">
            <action dev="Anton Pechinsky" type="add">
                Add method srp-contract/Utils.getDefaultIfNull(value, defaultValue)
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add method srp-contract/Utils.getFirstNonNull(value, values...)
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add class srp-support/CompositeKey
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add class srp-support/EmptyInvocationHandler for easy creation interface empty implementations
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add nested properties support to srp-support/ReflectionUtils class.
            </action>
        </release>

        <release version="0.3.1" date="2012-02-11">
            <action dev="Anton Pechinsky" type="change">
                Migrating to maven-javadoc-plugin:2.8.1 and maven-source-plugin:2.1.2
            </action>
            <action dev="Anton Pechinsky" type="change">
                Promotion to maven Central
            </action>
        </release>

        <release version="0.3.0" date="2011-10-08">
            <action dev="Anton Pechinsky" type="fix">
                Defect fixes.
            </action>
        </release>

        <release version="0.3.0-SNAPSHOT" date="2011-10-08">
            <action dev="Anton Pechinsky" type="add">
                Create new module 'srp-module' containing ValueModel and corresponding abstractions.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Create new module 'srp-model-support' ValueModel extension classes.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add PropertyAdapterFactory - factory for creation ValueModel for named property.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add BeanPropertyAdapterFactory - an implementation of PropertyAdapterFactory which creates ValueModel for bean properties.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add MapPropertyAdapterFactory - an implementation of PropertyAdapterFactory which creates ValueModel for Map.
            </action>
            <action dev="Anton Pechinsky" type="change">
                ValueModel and corresponding abstractions are moved out from srp-binding to new srp-model module.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add ImmutableValueModel - immutable concrete implementation of ValueModel.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add MutableValueModel - mutable concrete implementation of ValueModel.
            </action>
        </release>

        <release version="0.2-SNAPSHOT" date="2011-03-10" description="Minor modifications.">
            <action dev="Anton Pechinsky" type="change">
                ConvererRegistry registers reverse converter if TwoWayConverter is registered.
                For example if call:
                    ConvererRegistry.registerConverter(Integer.class, String.class, twoWayConverter).
                then following converter is registered implicitly:
                    ConvererRegistry.registerConverter(String.class, Integer.class, new ConvertBackConverter(twoWayConverter))
            </action>
            <action dev="Anton Pechinsky" type="change">
                Migrated to Mockito mocking framework.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add TwoWayConverter. An extension of Converter having convertBack() method.
            </action>
            <action dev="Anton Pechinsky" type="change">
                Add method Binding.getConverter(). An optional Binding specific converter.
                If exists specific converter is used for value conversion otherwise global converters are used.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add new converters: DateToStringConverter, StringToDateConverter
            </action>
            <action dev="Anton Pechinsky" type="change">
                Rename methods of Assert/Argument from isXXXXX to checkXXXXX.
            </action>
            <action dev="Anton Pechinsky" type="change">
                Add DelegateTwoWayConverter converter - composes TwoWayConverter from two other converters.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add javadoc for classes from org.srplib.conversion package.
            </action>
            <action dev="Anton Pechinsky" type="add">
                Add method Argument.checkNotNullWithGenericMessage.
            </action>
            <action dev="Anton Pechinsky" type="fix">
                Add method Argument.checkNotNullWithGenericMessage.
            </action>
        </release>

        <release version="0.1-SNAPSHOT" date="2011-01-10" description="Initial version.">
            <action dev="Anton Pechinsky" type="add">
                Committed.
            </action>
        </release>

    </body>
</document>
